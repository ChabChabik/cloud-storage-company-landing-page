/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
html{line-height:1.15;-webkit-text-size-adjust:100%;background:#fffcf5}body,sub,sup{position:relative}body{outline:2px solid red;max-width:1460px;margin:0 auto;font-family:'Poppins-Regular',sans-serif}details,main{display:block}h1{font-size:2em}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0;overflow:visible}code,kbd,pre,samp{font:1em monospace,monospace}a{background:0 0;color:var(--text-color);text-decoration:none;text-wrap:nowrap}abbr[title]{border-bottom:none;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}small{font-size:80%}sub,sup{font-size:75%;line-height:0;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none;width:100%}button,input,optgroup,select,textarea{font:100%/1.15 inherit;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{color:inherit;display:table;max-width:100%;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio],legend{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}[hidden],template{display:none}@font-face{font-family:'IstokWeb-Bold';src:url(../fonts/IstokWeb-Bold.woff2) format('woff2'),url(../fonts/IstokWeb-Bold.woff) format('woff');font-style:normal;font-weight:700;font-display:swap}@font-face{font-family:'Poppins-Bold';src:url(../fonts/Poppins-Bold.woff2) format('woff2'),url(../fonts/Poppins-Bold.woff) format('woff');font-style:normal;font-weight:700;font-display:swap}@font-face{font-family:'Poppins-Medium';src:url(../fonts/Poppins-Medium.woff2) format('woff2'),url(../fonts/Poppins-Medium.woff) format('woff');font-style:normal;font-weight:500;font-display:swap}@font-face{font-family:'Poppins-Regular';src:url(../fonts/Poppins-Regular.woff2) format('woff2'),url(../fonts/Poppins-Regular.woff) format('woff');font-style:normal;font-weight:400;font-display:swap}@font-face{font-family:'Poppins-SemiBold';src:url(../fonts/Poppins-SemiBold.woff2) format('woff2'),url(../fonts/Poppins-SemiBold.woff) format('woff');font-style:normal;font-weight:600;font-display:swap}@font-face{font-family:'Roboto-Bold';src:url(../fonts/Roboto-Bold.woff2) format('woff2'),url(../fonts/Roboto-Bold.woff) format('woff');font-style:normal;font-weight:700;font-display:swap}@font-face{font-family:'Roboto-Medium';src:url(../fonts/Roboto-Medium.woff2) format('woff2'),url(../fonts/Roboto-Medium.woff) format('woff');font-style:normal;font-weight:500;font-display:swap}.container{outline:2px dotted #00f;max-width:1213px;margin-left:auto;margin-right:auto;padding:0 10px}*{-webkit-box-sizing:border-box;box-sizing:border-box}h1,h2,h3,h4,h5,h6,p,ul{margin:0}ul{list-style:none;padding:0}a:visited{color:var(--text-color)}button{padding:0;cursor:pointer;text-wrap:nowrap}address{font-style:normal}.btn,.btn-fill{padding:5px 19px;border-radius:var(--btn_border-radius)}.btn{border:3px solid var(--btn_background-color);color:var(--btn_text-color);font-family:'Poppins-Bold'}.btn-fill{background:var(--btn_background-color);border:0;color:var(--btn-fill_text-color)!important}:root{--social_background-color:rgba(254, 156, 105, 1);--social_border-bradius:50%}.svg-Facebook-dims,.svg-Instagram-dims{width:28px;height:28px}.svg-LearnMoreicon-dims{width:21px;height:26px}.svg-LinkedIn-dims,.svg-Pinterest-dims{width:28px;height:28px}.svg-Star-dims{width:16px;height:15px}.social__icon>picture,.svg-Twitter-dims,.svg-YouTube-dims{width:28px;height:28px}.svg-icon_adventages{width:48px;height:38px;-webkit-transform:translateY(38%);-ms-transform:translateY(38%);transform:translateY(38%)}.svg-logo-dims{width:28px;height:26px}.svg-select-dims{width:6px;height:5px}.share__container{padding-right:69px;padding-left:69px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.share__img,.share__info{-webkit-box-flex:1;-ms-flex:1 1 49%;flex:1 1 49%}.share__img-inner{max-width:520px}.share__tetx{margin-top:0;margin-bottom:34px}.send__container{padding:135px 138px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.send__img,.send__info{-webkit-box-flex:1;-ms-flex:1 1 49%;flex:1 1 49%}.send__img-inner{max-width:530px}.send__item{margin-bottom:18px;position:relative}.send__item::before,.send__item:last-child::before,.send__item:nth-child(2)::before{background:var(--main_color);content:'';background:url(../../images/sprite.svg#icon_4) no-repeat;width:56px;height:56px;border-radius:12px;text-align:center;vertical-align:middle;position:absolute;left:-70px}.send__item:nth-child(2)::before{background:url(../../images/sprite.svg#icon_5)}.send__item:last-child::before{background:url(../../images/sprite.svg#icon_6)}.send__title{font:17px/148.2% 'Poppins-Bold',sans-serif;margin-bottom:6px;color:var(--text-list-title_color)}.send__text{max-width:320px;margin-top:0;margin-bottom:34px}:root{--main_color:rgba(254, 156, 105, 1);--btn-dark_background-color:rgba(69, 90, 100, 1);--btn-fill_text-color:rgba(243, 252, 255, 1);--btn_text-color:rgba(0, 0, 0, 1);--btn_background-color:rgba(254, 156, 105, 1);--btn_border-radius:8px;--blocks_background-color:linear-gradient(300deg, #F5F2EB 1.26%, #F7E6CB 100.49%);--blocks_box-shadow:5.539px 5.539px 28.802px 0px #DD8762;--blocks_small-shadow:5px 5px 13px 0px #DD8762;--blocks_border-radius:44px;--blocks-long_border-radius:13px;--blocks-store_border-radius:6px;--blocks-store_box-shadow:0px 2px 2px 0px rgba(131, 131, 131, 0.47);--shop_border-radius:4px}.container{margin-bottom:100px}.logo{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.store{width:131px;height:45px;border-radius:var(--shop_border-radius)}.block,.block_big{background:var(--blocks_background-color);border-radius:var(--blocks_border-radius)}.block{-webkit-box-shadow:var(--blocks_small-shadow);box-shadow:var(--blocks_small-shadow)}.block_big{-webkit-box-shadow:var(--blocks_box-shadow);box-shadow:var(--blocks_box-shadow)}.icon{background:var(--main_color);border-radius:12px;width:67px;height:67px;text-align:center}.shop{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.shop-inner{margin-right:13px;-webkit-transform:translateY(3px);-ms-transform:translateY(3px);transform:translateY(3px)}.dekor{position:absolute;width:100%;height:716px;background:linear-gradient(178deg,#fffbf0 4.22%,#f7e6cc 98.53%);-webkit-filter:drop-shadow(0 5px 26px #dd8762);filter:drop-shadow(0 5px 26px #dd8762);z-index:-1;border-radius:0 0 750px 750px/0 0 90px 90px}.header-container,.header__list{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.header-container{margin-bottom:0;-ms-flex-pack:distribute;justify-content:space-around}.header__list{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;gap:27px}.header__item,.header__select{font:14px/1 'Poppins-Bold',sans-serif}.header__select{border:transparent}.hero__container{background:url(../images/world-background.png);max-height:623px;display:-webkit-box;display:-ms-flexbox;display:flex;padding:83px 119px 66px 96px}.hero__container>*{-webkit-box-flex:1;-ms-flex:1 1 50%;flex:1 1 50%}.hero__info{margin-top:auto;margin-bottom:auto}.hero__learn,.hero__offers,.hero__play{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.hero__learn{margin-bottom:16px}.hero__tetx{max-width:449px;margin-bottom:26px}.hero__btn{background:var(--btn-dark_background-color);margin-right:10px;padding:9px 25px}.btn__subscribe{font:14px/146.687% 'Poppins-Bold',sans-serif;color:var(--text_light-color)}.svg-LearnMoreicon-dims{margin-right:8px;vertical-align:middle}.hero__offers{font:12/187% 'Poppins-Bold',sans-serif;color:var(--text_light-color)}.hero__offers-inner:first-child{margin-right:14px;position:relative}.hero__offers-inner:first-child::after{content:'l';position:absolute;color:var(--main_color);right:-10px}.hero__img-inner{max-width:434px}.advantages__list{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-wrap:wrap;flex-wrap:wrap}.advantages__item{padding:43px 37px 40px;max-width:363px;margin-bottom:62px;-ms-flex-item-align:stretch;align-self:stretch}.advantages__title{margin-bottom:10px}.advantages__icon{margin-left:auto;margin-right:auto;margin-bottom:16px}.advantages__title-description{max-width:601px;margin-bottom:74px}.security__container{padding-left:69px;padding-right:69px}.security__contant{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.security__img,.security__info{-webkit-box-flex:1;-ms-flex:1 1 49%;flex:1 1 49%}.security__img-inner{max-width:501px}.security__title{font-size:19px!important;margin-bottom:15px;line-height:148%;letter-spacing:.5px}.security__title-description{margin-bottom:100px}.security__text{margin-bottom:15px}.security__info>.shop{margin-top:44px}.work__container{padding:116px 69px 146px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.work__img,.work__info{-webkit-box-flex:1;-ms-flex:1 1 49%;flex:1 1 49%}.work__img-inner{max-width:520px}.work__tetx{margin-top:0;margin-bottom:34px}.work__item{background:#fff;max-width:300px;height:73px;margin-top:23px;margin-bottom:23px;padding:12px 75px 17px 66px;position:relative;text-wrap:nowrap;border-radius:13px}.work__item::before,.work__item:last-child::before{background:var(--main_color);content:'';background:url(../../images/sprite.svg#icon_7) no-repeat;width:33px;height:33px;border-radius:8px;text-align:center;vertical-align:middle;position:absolute;left:16px;top:20px}.work__item:last-child::before{background:url(../../images/sprite.svg#icon_8)}.work__text,.work__title{font:15px/153% 'Roboto-Medium',sans-serif;color:var(--text-description_dark-color)}.commands__container{padding:0 49px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.commands__img,.commands__info{-webkit-box-flex:1;-ms-flex:1 1 49%;flex:1 1 49%}.commands__info{padding-left:114px}.commands__img-inner{max-width:544px}.commands__title-main{margin-bottom:15px}.commands__text,.commands__title-description,.footer__logo>a{margin-bottom:10px}.commands__text{font:15px/153% 'Roboto-Medium',sans-serif;margin-top:10px;color:var(--text-description_dark-color)}.commands__buttons{margin-top:36px;font-family:'Roboto-Bold',sans-serif;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;gap:10px}.btn-fill.commands__btn{display:inline-block;padding:9px 27px 10px;height:40px}.btn.commands__btn{display:inline-block;padding-right:34px;padding-left:35px;height:40px}.footer__container{padding-left:160px;padding-right:151px}.footer__top{display:-webkit-box;display:-ms-flexbox;display:flex}.footer__logo{max-width:383px;padding-right:25px;display:inline-block}.foote__description{width:300px;padding-right:30px;margin-bottom:17px;line-height:153%}.footer__list-main{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center;gap:60px}.footer__title{font:14px/153.2% 'Poppins-Bold',sans-serif;margin-bottom:14px}.footer__item{font:14/153% 'Poppins-Regular',sans-serif;margin-bottom:7px;color:var(--text-description_dark-color)}.footer__bottom{margin-bottom:43px;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.copiright,.footer__bottom,.social__list{display:-webkit-box;display:-ms-flexbox;display:flex}.copiright{width:100%;height:66px;padding:19px 0;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.social__list{gap:9px}.copiright__background{width:100%;height:66px;background:var(--blocks_background-color);position:absolute;left:0;bottom:0;z-index:-1}.contacts__mail,.contacts__tel{margin-left:36px;position:relative}.contacts__mail::before,.contacts__tel::before{position:absolute;background-size:cover;top:2px;bottom:0;left:-29px;width:18px;height:18px}.contacts__tel::before{content:url(../images/sprite.svg#phone-fill)}.contacts__mail::before{content:url(../images/sprite.svg#mail-fill)}.footer__form{font-size:0}.footer__input{height:41px;width:443px;padding:13px 17px;border-radius:8px 0 0 8px;border:.331px solid var(--social_background-color)}.footer__input::-webkit-input-placeholder{color:var(--text-placeholder_color)}.footer__input::-moz-placeholder{color:var(--text-placeholder_color)}.footer__input:-ms-input-placeholder{color:var(--text-placeholder_color)}.footer__input::-ms-input-placeholder{color:var(--text-placeholder_color)}.footer__input::placeholder{color:var(--text-placeholder_color)}.footer__btn{height:41px;border-top-left-radius:0;border-bottom-left-radius:0;padding:11px 40px}@font-face{font-family:'IstokWeb-Bold';src:url(../fonts/IstokWeb-Bold.woff2) format('woff2'),url(../fonts/IstokWeb-Bold.woff) format('woff');font-style:normal;font-weight:700;font-display:swap}@font-face{font-family:'Poppins-Bold';src:url(../fonts/Poppins-Bold.woff2) format('woff2'),url(../fonts/Poppins-Bold.woff) format('woff');font-style:normal;font-weight:700;font-display:swap}@font-face{font-family:'Poppins-Medium';src:url(../fonts/Poppins-Medium.woff2) format('woff2'),url(../fonts/Poppins-Medium.woff) format('woff');font-style:normal;font-weight:500;font-display:swap}@font-face{font-family:'Poppins-Regular';src:url(../fonts/Poppins-Regular.woff2) format('woff2'),url(../fonts/Poppins-Regular.woff) format('woff');font-style:normal;font-weight:400;font-display:swap}@font-face{font-family:'Poppins-SemiBold';src:url(../fonts/Poppins-SemiBold.woff2) format('woff2'),url(../fonts/Poppins-SemiBold.woff) format('woff');font-style:normal;font-weight:600;font-display:swap}@font-face{font-family:'Roboto-Bold';src:url(../fonts/Roboto-Bold.woff2) format('woff2'),url(../fonts/Roboto-Bold.woff) format('woff');font-style:normal;font-weight:700;font-display:swap}@font-face{font-family:'Roboto-Medium';src:url(../fonts/Roboto-Medium.woff2) format('woff2'),url(../fonts/Roboto-Medium.woff) format('woff');font-style:normal;font-weight:500;font-display:swap}:root{--text_dark-color:rgba(0, 0, 0, 1);--text_light-color:rgba(69, 90, 100, 1);--text-description_light-color:rgba(83, 83, 89, 1);--text-description_dark-color:rgba(57, 57, 57, 1);--text-list-title_color:rgba(55, 71, 79, 1);--text-placeholder_color:rgba(143, 143, 143, 1);--text-logo_color:rgba(50, 50, 50, 1)}.text__center{text-align:center}.logo__text{font:28px 'IstokWeb-Bold',sans-serif;color:var(--text-logo_color)}.title,.title-dark{font:42px/126% 'Poppins-Bold',sans-serif;margin-bottom:17px}.title{color:var(--text_light-color)}.title-dark{color:var(--text_dark-color)}.text__description{font:16px/147% 'Poppins-Medium',sans-serif;color:var(--text-description_light-color);letter-spacing:.5px}.text__title-description{font:16.67px/148% 'Roboto-Medium',sans-serif;max-width:601px;margin-left:auto;margin-right:auto;color:var(--text-description_dark-color);letter-spacing:.5px}.title__small{font:17.864px/146.687% 'Roboto-Bold';color:var(--text-list-title_color)}/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */
